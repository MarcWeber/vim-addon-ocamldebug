Note: try [1] first and only use this plugin if you can't get ruby-debug-ide to
work

minimal ocamldebug support for vim based on vim-addon-async.

usage:
  AsyncOcamlDebug ocamldebug -emacs executable

  Then you can use F5,F6, ... to step and set breakpoints
  (see plugin/vim-addon-ocamldebug.vim)

  You can pass input to debug process, see documentation of vim-addon-async

If something doesn't work contact me.

limitations
===========
breakpoints with column numbers are supported, but only the line is
highlighted, and you can add only one breakpoint per line using F9
(you can add more manually -> [I])

interfacing with the debugger [I]
=================================
add line to the debugger output window, select it, press <cr> (see
vim-addon-async for details)

related work
=============
This is a fork of github.com/MarcWeber/vim-addon-ocamldebug - and its work in progress.

commands: (see vim-addon-async to learn about how to send them in the
OCAML_DEBUG_PROCESS window). Some of those have shortcuts, see plugin/vim-addon-ocamldebug.vim

        goto 1000
        set arguments arg1 arg2
        run
        help
        help command
        help set variable, help show variable
        set variable value
        show variable
        info subject

        details see http://caml.inria.fr/pub/docs/manual-ocaml/manual030.html

There are some more debugger script at www.vim.org which work with any
commandline related debugger or can be extended to work with those.
I haven't tried them. Example:
http://www.vim.org/scripts/script.php?script_id=1703

installation:
=============

  get github.com/MarcWeber/vim-addon-manager, and add 'vim-addon-ocamldebug' to the
  list of plugins to be activated on startup. Read its documention.
  It also talks about alternative and references Vim's help file about what the
  old way of installing plugins was.

OR

  use any other way and install this plugin along with the plugins mentioned in
  the dependency section of ./addon-info.json (which all can be found on
  github.com/MarcWeber).


BUGS:
    - no threading support yet
    - no support for debugging vars, but expecting vars by runing ocamldebug commands
      works (type text, visually select and hit <cr>), see vim-addon-async's
      documentation for details
    - if exception traces are logged vim sometimes interpretes them as "execution
      instruction" and jumps to that location.
      A simple F6 (next instruction) will take you back
    - probably this all is based on the wrong API - I should use what Eclipse,
      netbeans etc are using (ruby-debug?) - but it works for me.
    - sometimes a debug process seems to continue running with 100% CPU utilization.
      Kill it manually

support for multiple processes is started but not complete
