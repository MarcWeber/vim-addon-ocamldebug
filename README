Note: try [1] first and only use this plugin if you can't get ruby-debug-ide to
work

minimal rdebug debugging support based on vim-addon-async

usage:
  add require 'debug' to your ruby project, then run:
  AsyncRubyRDebug ruby file.rb

  Then you can use F5,F6, ... to step and set breakpoints
  (see plugin/vim-addon-rdebug.vim)

  You can pass input to debug process, see documentation of vim-addon-async

If something doesn't work contact me.

related work:
github.com/MarcWeber/vim-addon-ruby-debug-ide [1]
https://github.com/astashov/vim-ruby-debugger

installation:
=============

  get github.com/MarcWeber/vim-addon-manager, and add 'vim-addon-rdebug' to the
  list of plugins to be activated on startup. Read its documention.
  It also talks about alternative and references Vim's help file about what the
  old way of installing plugins was.

OR

  use any other way and install this plugin along with the plugins mentioned in
  the dependency section of ./addon-info.json (which all can be found on
  github.com/MarcWeber).


BUGS:
    - no threading support yet
    - no support for debugging vars, but expecting vars by runing rdebug commands
      works
    - if exception traces are logged vim sometimes interpretes them as "execution
      instruction" and jumps to that location.
      A simple F6 (next instruction) will take you back
    - probably this all is based on the wrong API - I should use what Eclipse,
      netbeans etc are using (ruby-debug?) - but it works for me.
    - sometimes a debug process seems to continue running with 100% CPU utilization.
      Kill it manually

support for multiple processes is started but not complete
